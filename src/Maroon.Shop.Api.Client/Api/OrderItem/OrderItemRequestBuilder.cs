// <auto-generated/>
#pragma warning disable CS0618
using Maroon.Shop.Api.Client.Api.OrderItem.ByOrderId;
using Maroon.Shop.Api.Client.Api.OrderItem.ByProductId;
using Maroon.Shop.Api.Client.Api.OrderItem.Create;
using Maroon.Shop.Api.Client.Api.OrderItem.Item;
using Maroon.Shop.Api.Client.Api.OrderItem.Update;
using Maroon.Shop.Api.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Maroon.Shop.Api.Client.Api.OrderItem
{
    /// <summary>
    /// Builds and executes requests for operations under \api\OrderItem
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class OrderItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The ByOrderId property</summary>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.ByOrderId.ByOrderIdRequestBuilder ByOrderId
        {
            get => new global::Maroon.Shop.Api.Client.Api.OrderItem.ByOrderId.ByOrderIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ByProductId property</summary>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.ByProductId.ByProductIdRequestBuilder ByProductId
        {
            get => new global::Maroon.Shop.Api.Client.Api.OrderItem.ByProductId.ByProductIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Create property</summary>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.Create.CreateRequestBuilder Create
        {
            get => new global::Maroon.Shop.Api.Client.Api.OrderItem.Create.CreateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Update property</summary>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.Update.UpdateRequestBuilder Update
        {
            get => new global::Maroon.Shop.Api.Client.Api.OrderItem.Update.UpdateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the Maroon.Shop.Api.Client.api.OrderItem.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::Maroon.Shop.Api.Client.Api.OrderItem.Item.WithOrderItemItemRequestBuilder"/></returns>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.Item.WithOrderItemItemRequestBuilder this[long position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("OrderItemId", position);
                return new global::Maroon.Shop.Api.Client.Api.OrderItem.Item.WithOrderItemItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OrderItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/OrderItem{?PageNumber*,PageSize*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OrderItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/OrderItem{?PageNumber*,PageSize*}", rawUrl)
        {
        }
        /// <returns>A <see cref="global::Maroon.Shop.Api.Client.Models.OrderItemResponsePagedResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Maroon.Shop.Api.Client.Models.OrderItemResponsePagedResponse?> GetAsync(Action<RequestConfiguration<global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder.OrderItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Maroon.Shop.Api.Client.Models.OrderItemResponsePagedResponse> GetAsync(Action<RequestConfiguration<global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder.OrderItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::Maroon.Shop.Api.Client.Models.OrderItemResponsePagedResponse>(requestInfo, global::Maroon.Shop.Api.Client.Models.OrderItemResponsePagedResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder.OrderItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder.OrderItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json, text/plain;q=0.9");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Maroon.Shop.Api.Client.Api.OrderItem.OrderItemRequestBuilder(rawUrl, RequestAdapter);
        }
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
        #pragma warning disable CS1591
        public partial class OrderItemRequestBuilderGetQueryParameters 
        #pragma warning restore CS1591
        {
            public int? PageNumber { get; set; }
            public int? PageSize { get; set; }
        }
    }
}
#pragma warning restore CS0618
