// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Maroon.Shop.Api.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class UpdateProductRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The imageUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The pleaseNote property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PleaseNote { get; set; }
#nullable restore
#else
        public string PleaseNote { get; set; }
#endif
        /// <summary>The price property</summary>
        public double? Price { get; set; }
        /// <summary>The productId property</summary>
        public long? ProductId { get; set; }
        /// <summary>The urlFriendlyName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UrlFriendlyName { get; set; }
#nullable restore
#else
        public string UrlFriendlyName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Maroon.Shop.Api.Client.Models.UpdateProductRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Maroon.Shop.Api.Client.Models.UpdateProductRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Maroon.Shop.Api.Client.Models.UpdateProductRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "imageUrl", n => { ImageUrl = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "pleaseNote", n => { PleaseNote = n.GetStringValue(); } },
                { "price", n => { Price = n.GetDoubleValue(); } },
                { "productId", n => { ProductId = n.GetLongValue(); } },
                { "urlFriendlyName", n => { UrlFriendlyName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("imageUrl", ImageUrl);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("pleaseNote", PleaseNote);
            writer.WriteDoubleValue("price", Price);
            writer.WriteLongValue("productId", ProductId);
            writer.WriteStringValue("urlFriendlyName", UrlFriendlyName);
        }
    }
}
#pragma warning restore CS0618
